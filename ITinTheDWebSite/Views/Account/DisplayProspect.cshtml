@model ITinTheDWebSite.Models.ProspectModel
@{
    ViewBag.Title = "Index";
}
<h3>@TempData["RegistrationMessage"]</h3>
<h4>@TempData["Message"]</h4>
@using (Html.BeginForm("StoreProspect", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{  
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>StudentProspect</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmailAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmailAddress)
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Telephone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.DesiredCareerPath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DesiredCareerPath)
            @Html.ValidationMessageFor(model => model.DesiredCareerPath)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            @Html.RadioButtonFor(model => model.Gender, "Male")
            @Html.LabelFor(model => model.Gender, "Male")
            @Html.RadioButtonFor(model => model.Gender, "Female")
            @Html.LabelFor(model => model.Gender, "Female")
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
        <div class="editor-label">
            @Html.Label("Upload Resume")
        </div>
        <div>
            <input type="file" name="ResumeFile" />
            @if (Model.ResumeUploaded == "Yes")
            {
                <img src="../../Images/Files%20Upload%20Check/SQLDatabase_CheckMark.PNG" / style="width: 32px; height: 32px;">
            }

            else if (Model.ResumeUploaded == "No")
            {
                <img src="../../Images/Files%20Upload%20Check/SQLDatabse_CheckX.PNG" / style="width: 32px; height: 32px;">
            }
        </div>
        <div class="editor-label">
            @Html.Label("Upload Transcript - Optional")
        </div>
        <div>
            <input type="file" name="TranscriptFile" />
            @if (Model.TranscriptUploaded == "Yes")
            {
                <img src="../../Images/Files%20Upload%20Check/SQLDatabase_CheckMark.PNG" / style="width: 32px; height: 32px;">
            }

            else if (Model.TranscriptUploaded == "No")
            {
                <img src="../../Images/Files%20Upload%20Check/SQLDatabse_CheckX.PNG" / style="width: 32px; height: 32px;">
            }
        </div>
        <p>
            <input type="submit" value="Submit" />
        </p>
    </fieldset>
}
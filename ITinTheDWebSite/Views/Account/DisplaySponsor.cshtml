@model ITinTheDWebSite.Models.SponsorModel
@{
    ViewBag.Title = "Sponsor form";
}
<h3>@TempData["RegistrationMessage"]</h3>
<h4>@TempData["Message"]</h4>
@{
    ITinTheDWebSite.Models.RegisterModel regAdmin = new ITinTheDWebSite.Models.RegisterModel();
}
@if ((User.IsInRole("Admin") && ITinTheDWebSite.Helpers.DatabaseHelper.GetAdminData(regAdmin, WebSecurity.GetUserId(User.Identity.Name)).AccountStatus < 3) || !User.IsInRole("Admin") && (Model.AccountStatus == 1))
{
    <h4>You are not verified by the admin yet, your account status is pending.</h4>
}

else
{
    <h6>* Denotes required fields.</h6>
    using (Html.BeginForm("StoreSponsor", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CorporateSponsor</legend>
        <div>
            @if (Model.ImageUploaded == "Yes")
            {
                <p>
                    Image</p>
                <img src="/GetFileImage.ashx?id=@WebSecurity.GetUserId(Model.EmailAddress)" />
            }
            <div class="editor-label">
                <br />
                @Html.Label("Upload Image")
            </div>
            <input type="file" name="ImageFile" />
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyName)
            @Html.ValidationMessageFor(model => model.CompanyName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyAddress)
            @Html.ValidationMessageFor(model => model.CompanyAddress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ContactName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactName)
            @Html.ValidationMessageFor(model => model.ContactName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        @{
            if (User.IsInRole("Admin"))
            {
                if (ITinTheDWebSite.Helpers.DatabaseHelper.GetAdminData(regAdmin, WebSecurity.GetUserId(User.Identity.Name)).AccountStatus == 3)
                {
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AccountStatus)
            </div>
                }

                else
                {
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AccountStatus, new { @readonly = true })
            </div>
                }

            }

            else if (Model.EmailAddress == null)
            {

            }

            else
            {
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AccountStatus, new { @readonly = true })
            </div>
            }
        }
        @Html.ValidationMessageFor(model => model.AccountStatus)
        <div class="editor-label">
            @Html.LabelFor(model => model.Telephone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmailAddress)
        </div>
        <div class="editor-field">
            @if (Model.EmailAddress == null)
            {
                @Html.EditorFor(model => model.EmailAddress)
            }
            else
            {
                @Html.TextBoxFor(model => model.EmailAddress, new { @readonly = true })
            }
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Reason)
            @Html.TextAreaFor(m => m.Reason, new { @class = "chars-remaining-text-area", @cols = 15, @rows = 1, @onblur = "textCounter(this,this.form.counter,4000);", @onkeyup = "textCounter(this,this.form.counter,4000);" })
            <br />
            <input style="width: 37px" onblur="textCounter(this.form.recipients,this,4000);"
                disabled onfocus="this.blur();" tabindex="999" maxlength="4" size="4" value="4000"
                name="counter" id="counter" />
            <small>characters remaining.</small>
        </div>
        <p>
            <input type="submit" value="Submit" />
        </p>
    </fieldset>
    }
    <script type="text/javascript">
        function textCounter(field, countfield, maxlimit) {
            if (field.value.length > maxlimit) {
                field.value = field.value.substring(0, maxlimit);
                field.blur();
                field.focus();
                return false;
            } else {
                countfield.value = maxlimit - field.value.length;
            }
        };

        $(document).ready(function () { textCounter($("#Reason")[0], $("#counter")[0], 4000) });
        //    TODO: Figure out how to call textCounter function after the dom has loaded (jquery ready function?)
    
    </script>
}
@model ITinTheDWebSite.Models.RegisterModel
@{
    ViewBag.Title = "Admin form.";
}
<h3>@TempData["RegistrationMessage"]</h3>
<h4>@TempData["Message"]</h4>
@{
    ITinTheDWebSite.Models.RegisterModel regAdmin = new ITinTheDWebSite.Models.RegisterModel();
}
@if (Model.AccountStatus == 1)
{
    <h4>
        You are not verified by the admin yet, your account status is 1.</h4>
}

else
{
    <h6>
        * Denotes required fields.</h6>
    using (Html.BeginForm("StoreAdmin", "Admin"))
    {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Registration Form</legend>
        <div>
            @if (Model.ImageUploaded == "Yes")
            {
                <p>
                    Avatar</p>
                <img src="/GetFileImage.ashx?id=@WebSecurity.GetUserId(Model.EmailAddress)" / style="width: 128px; height: 128px;">

            }
            <div class="editor-label">
                <br />
                @Html.Label("Upload Avatar")
            </div>
            <input type="file" name="ImageFile" />
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        @{
            if (User.IsInRole("Admin"))
            {
                if (ITinTheDWebSite.Helpers.DatabaseHelper.GetAdminData(regAdmin, WebSecurity.GetUserId(User.Identity.Name)).AccountStatus == 3)
                {
                    if (Model.EmailAddress == ITinTheDWebSite.Helpers.DatabaseHelper.GetAdminData(regAdmin, WebSecurity.GetUserId(User.Identity.Name)).EmailAddress)
                    {
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AccountStatus, new { @readonly = true })
            </div>
                    }

                    else
                    {
                
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AccountStatus)
            </div>
                    }
                }

                else
                {
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AccountStatus, new { @readonly = true })
            </div>
                }

            }

            else if (Model.EmailAddress == null)
            {

            }

            else
            {
            <div class="editor-label">
                @Html.LabelFor(model => model.AccountStatus)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.AccountStatus, new { @readonly = true })
            </div>
            }
        }
        @Html.ValidationMessageFor(model => model.AccountStatus)
        <div class="editor-label">
            @Html.LabelFor(model => model.EmailAddress)
        </div>
        <div class="editor-field">
            @if (Model.EmailAddress == null)
            {
                @Html.EditorFor(model => model.EmailAddress)
            }
            else
            {
                @Html.TextBoxFor(model => model.EmailAddress, new { @readonly = true })
            }
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConfirmPassword)
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyName)
            @Html.ValidationMessageFor(model => model.CompanyName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Telephone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>
        <p>
            <input type="submit" value="Submit" />
        </p>
    </fieldset>
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

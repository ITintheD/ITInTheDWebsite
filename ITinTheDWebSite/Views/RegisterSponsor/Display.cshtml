@model ITinTheDWebSite.Models.SponsorModel

@{
    ViewBag.Title = "Create";
}

<h3>Become a sponsor for IT in the D</h3>
<h4>@TempData["Message"]</h4>
@using (Html.BeginForm("Store","RegisterSponsor")) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CorporateSponsor</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyName)
            @Html.ValidationMessageFor(model => model.CompanyName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyAddress)
            @Html.ValidationMessageFor(model => model.CompanyAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactName)
            @Html.ValidationMessageFor(model => model.ContactName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Telephone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Telephone)
            @Html.ValidationMessageFor(model => model.Telephone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmailAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmailAddress)
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Reason)
            @Html.TextAreaFor(m => m.Reason, new { @class = "chars-remaining-text-area", @cols = 15, @rows = 1, @onblur = "textCounter(this,this.form.counter,4000);", @onkeyup = "textCounter(this,this.form.counter,4000);" })
            <br/>
            <input style="width:37px" onblur="textCounter(this.form.recipients,this,4000);" disabled
            onfocus="this.blur();" tabindex="999" maxlength="4" size="4" value="4000"
            name="counter" id="counter" /> <small>characters remaining.</small>
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<script type="text/javascript">
    function textCounter(field, countfield, maxlimit) {
        if (field.value.length > maxlimit) {
            field.value = field.value.substring(0, maxlimit);
            field.blur();
            field.focus();
            return false;
        } else {
            countfield.value = maxlimit - field.value.length;
        }
    };

    $(document).ready(function () { textCounter($("#Reason")[0],$("#counter")[0],4000)});
//    TODO: Figure out how to call textCounter function after the dom has loaded (jquery ready function?)

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}